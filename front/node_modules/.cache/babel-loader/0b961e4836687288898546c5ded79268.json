{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Rhys_code/clearSky/property-app/src/containers/Signup.js\";\nimport React, { Component } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Signup.css\";\nimport { Auth } from \"aws-amplify\";\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        const newUser = await Auth.signUp({\n          username: this.state.email,\n          password: this.state.password\n        });\n        this.setState({\n          newUser\n        });\n      } catch (e) {\n        alert(e.message);\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleConfirmationSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      try {\n        await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n        await Auth.signIn(this.state.email, this.state.password);\n        this.props.userHasAuthenticated(true);\n        this.props.history.push(\"/\");\n      } catch (e) {\n        alert(e.message);\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  renderConfirmationForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Confirmation Code\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      value: this.state.confirmationCode,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(HelpBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Please check your email for the code.\")), React.createElement(LoaderButton, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateConfirmationForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Verify\",\n      loadingText: \"Verifying\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(LoaderButton, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Signup\",\n      loadingText: \"Signing up\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.newUser === null ? this.renderForm() : this.renderConfirmationForm());\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Rhys_code/clearSky/property-app/src/containers/Signup.js"],"names":["React","Component","HelpBlock","FormGroup","FormControl","ControlLabel","LoaderButton","Auth","Signup","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","isLoading","newUser","signUp","username","state","email","password","e","alert","message","handleConfirmationSubmit","confirmSignUp","confirmationCode","signIn","userHasAuthenticated","history","push","confirmPassword","validateForm","length","validateConfirmationForm","renderConfirmationForm","renderForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  HelpBlock, FormGroup, FormControl, ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Signup.css\";\nimport { Auth } from \"aws-amplify\";\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: this.state.email,\n        password: this.state.password\n      });\n      this.setState({\n        newUser\n      });\n    } catch (e) {\n      alert(e.message);\n    }\n  \n    this.setState({ isLoading: false });\n  }\n  \n  handleConfirmationSubmit = async event => {\n    event.preventDefault();\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n      await Auth.signIn(this.state.email, this.state.password);\n  \n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n\n  renderConfirmationForm() {\n    return (\n      <form onSubmit={this.handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            value={this.state.confirmationCode}\n            onChange={this.handleChange}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          bsSize=\"large\"\n          disabled={!this.validateConfirmationForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Verify\"\n          loadingText=\"Verifying…\"\n        />\n      </form>\n    );\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          bsSize=\"large\"\n          disabled={!this.validateForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Signup\"\n          loadingText=\"Signing up…\"\n        />\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        {this.state.newUser === null\n          ? this.renderForm()\n          : this.renderConfirmationForm()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}